{"version":3,"sources":["index.js"],"names":["STARTING_BALANCE","require","cryptoHash","ec","Wallet","constructor","balance","keyPair","genKeyPair","publicKey","getPublic","encode","sign","data","module","exports"],"mappings":"AAAA,MAAM,EAACA,gBAAD,KAAmBC,QAAQ,WAAR,CAAzB;AACA,MAAMC,aAAWD,QAAQ,qBAAR,CAAjB;AACA,MAAM,EAACE,EAAD,KAAKF,QAAQ,SAAR,CAAX;;AAEA,MAAMG,MAAN,CAAY;AACRC,kBAAa;AACT,aAAKC,OAAL,GAAaN,gBAAb;AACA,aAAKO,OAAL,GAAaJ,GAAGK,UAAH,EAAb;AACA,aAAKC,SAAL,GAAeF,QAAQG,SAAR,GAAoBC,MAApB,CAA2B,KAA3B,CAAf;AAEH;AACDC,SAAKC,IAAL,EAAU;AACN,aAAKN,OAAL,CAAaK,IAAb,CAAkBV,WAAWW,IAAX,CAAlB;AACH;AATO;;AAYZC,OAAOC,OAAP,GAAeX,MAAf","file":"index.js","sourcesContent":["const {STARTING_BALANCE}=require('../config');\nconst cryptoHash=require('../util/crypto-hash');\nconst {ec}=require('../util');\n\nclass Wallet{\n    constructor(){\n        this.balance=STARTING_BALANCE;\n        this.keyPair=ec.genKeyPair();\n        this.publicKey=keyPair.getPublic().encode('hex');\n\n    }\n    sign(data){\n        this.keyPair.sign(cryptoHash(data));\n    }\n}\n\nmodule.exports=Wallet;"]}